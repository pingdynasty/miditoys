<?xml version="1.0"?>
<project name="freq" default="all" basedir="." >

  <property file="build.properties"/>

  <path id="lib.path">
    <fileset dir="lib">
      <include name="*.jar"/>
      <include name="*.zip"/>
    </fileset>
  </path>

  <property file="build.properties"/>

  <target name="init">
    <tstamp>
      <format property="NOW" pattern="d MMM yyyy HH:mm zzz" locale="en"/>
    </tstamp>
    <property name="proj.dir" value="${user.dir}"/>
    <property name="src.dir" value="${proj.dir}/src"/>
    <property name="src.properties.dir" value="${proj.dir}/src/properties"/>
    <property name="build.dir" value="${proj.dir}/build/"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.docs.dir" value="${build.dir}/docs"/>
  </target>

  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.docs.dir}"/>
  </target>

  <target name="src.compile" depends="prepare">
    <javac srcdir="${src.dir}"
	   destdir="${build.classes.dir}"
           debug="${java.debug}"
	   source="${java.source}"
	   target="${java.target}"
	   excludes="com/pingdynasty/freq/Version.java">
      <classpath refid="lib.path"/>
    </javac>
  </target>

  <target name="compile" depends="src.compile"/>

  <target name="pong" depends="compile">
    <java classname="com.pingdynasty.pong.Pong" fork="yes">
      <jvmarg value="-Djava.library.path=lib/native/macosx"/>
      <classpath>
        <path refid="lib.path"/>
        <pathelement location="${build.classes.dir}"/>
        <pathelement location="${src.properties.dir}"/>
      </classpath>
    </java>
  </target>

  <target name="walk" depends="compile">
    <java classname="com.pingdynasty.midi.WalkingBass" fork="yes">
      <jvmarg value="-Djava.library.path=lib/native/macosx"/>
      <classpath>
        <path refid="lib.path"/>
        <pathelement location="${build.classes.dir}"/>
        <pathelement location="${src.properties.dir}"/>
      </classpath>
    </java>
  </target>

  <target name="docs.java" depends="prepare">
    <javadoc packagenames="org.oXML.*, com.pingdynasty.*"
             destdir="${build.docs.dir}/java" source="${java.source}">
      <fileset dir="${src.java.dir}"/>
      <fileset dir="${build.java.dir}"/>
<!--      <fileset dir="../mlml/src/java"/> -->
      <classpath refid="lib.path"/>
    </javadoc>
  </target>

  <target name="docs" depends="docs.java"/>

  <target name="readme" depends="prepare">
    <copy todir="${build.dir}" filtering="on" overwrite="true">
      <fileset dir="${proj.dir}/docs" includes="readme.txt"/>
      <filterset>
	<filter token="os" value="${os.name}"/>
	<filter token="arch" value="${os.arch}"/>
	<filter token="java.version" value="${java.version}"/>
	<filter token="ant.version" value="${ant.version}"/>
	<filter token="project" value="${ant.project.name}"/>
	<filter token="user" value="${user.name}"/>
	<filter token="now" value="${NOW}"/>
	<filtersfile file="build.properties"/>
      </filterset>
    </copy>
  </target>

  <target name="jar" depends="readme">
    <jar destfile="${build.dir}/${proj}.jar">
      <fileset dir="${build.classes.dir}" includes="**/*.class"/>
      <fileset dir="${src.properties.dir}" includes="**/*.properties"/>
      <fileset dir="${build.dir}" includes="readme.txt"/>
    </jar>
  </target>

  <target name="all" depends="prepare">
    <antcall target="compile"/>
    <antcall target="jar"/>
  </target>

  <target name="clean" depends="init" description="Clean up the build">
    <delete dir="${build.dir}"/>
  </target>

  <target name="pong.vst" depends="pong.vst.mac, pong.vst.windows"/>

  <target name="pong.vst.mac" depends="compile, jar">
    <property name="vst.dir" value="${build.dir}/pong-mac.vst"/>
    <mkdir dir="${vst.dir}"/>
    <copy todir="${vst.dir}/Contents/">
      <fileset dir="${src.dir}/config" includes="Info.plist, PkgInfo"/>
    </copy>
    <copy tofile="${vst.dir}/Contents/MacOS/pong.jnilib" 
          file="${proj.dir}/lib/native/macosx/libjvstwrapper.jnilib"/>
    <copy tofile="${vst.dir}/Contents/Resources/pong.jnilib.ini" 
          file="${src.dir}/config/pong.mac.ini"/>
    <copy todir="${vst.dir}/Contents/Resources">
      <fileset dir="${proj.dir}/lib" includes="jvaptools.jar, jVSTwRapper_bin.jar, jVSTsYstem_bin.jar"/>
      <fileset dir="${build.dir}" includes="pong.jar"/>
    </copy>
  </target>

  <target name="pong.vst.windows" depends="compile, jar">
    <property name="vst.dir" value="${build.dir}/pong-windows"/>
    <mkdir dir="${vst.dir}"/>
    <copy tofile="${vst.dir}/pong.dll" 
          file="${proj.dir}/lib/native/win32/jVSTwRapper.dll"/>
    <copy tofile="${vst.dir}/pong.windows.ini" 
          file="${src.dir}/config/pong.ini"/>
    <copy todir="${vst.dir}/">
      <fileset dir="${proj.dir}/lib" includes="jvaptools.jar, jVSTwRapper_bin.jar, jVSTsYstem_bin.jar"/>
      <fileset dir="${build.dir}" includes="pong.jar"/>
    </copy>
  </target>

</project>
